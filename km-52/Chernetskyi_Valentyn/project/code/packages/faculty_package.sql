CREATE OR REPLACE PACKAGE FACULTY_PACKAGE AS  
  
TYPE FACULTY_INFO_RECORD IS RECORD (  
  
    FAC_NAME        FACULTY.FACULTY_NAME%TYPE  
  
);  
  
TYPE FACULTY_INFO_TABLE IS   
    TABLE OF FACULTY_INFO_RECORD;  
  
  
    FUNCTION GET_FACULTY_INFO  
    RETURN FACULTY_INFO_TABLE PIPELINED;  
  
	  
    PROCEDURE ADD_FACULTY(  
        FAC_NAME        FACULTY.FACULTY_NAME%TYPE  
    );  
      
    PROCEDURE UPDATE_FACULTY_NAME(  
        FACULTY_NAME        UNIVERSITY.UNIVERSITY_NAME%TYPE,
        ST_FACULTY_NAME     STUDENT.FACULTY_NAME%TYPE
    );  
  
    PROCEDURE DELETE_UNIVERSITY( 
        FACULTY_NAME        FACULTY.FACULTY_NAME%TYPE
    ); 
     
END FACULTY_PACKAGE;
/

CREATE OR REPLACE PACKAGE BODY FACULTY_PACKAGE IS  
  
    FUNCTION GET_FACULTY_INFO  
    RETURN FACULTY_INFO_TABLE   
        PIPELINED  
    IS  
    BEGIN  
    FOR PIECE IN (  
        SELECT DISTINCT  FACULTY_NAME  
        FROM FACULTY 
    ) LOOP  
        PIPE ROW (PIECE);  
    END LOOP;  
    END GET_FACULTY_INFO;  
      
      
    PROCEDURE ADD_FACULTY(  
        FAC_NAME        FACULTY.FACULTY_NAME%TYPE   
    )  
    IS  
    BEGIN  
	INSERT INTO FACULTY (FACULTY_NAME)  
    VALUES (FAC_NAME);  
    COMMIT;  
    END ADD_FACULTY;  
  
    PROCEDURE UPDATE_FACULTY_NAME(  
        FAC_NAME        FACULTY.FACULTY_NAME%TYPE,
        ST_FAC_NAME     STUDENT.FACULTY_NAME%TYPE
    )  
    IS  
    BEGIN  
    UPDATE FACULTY
    SET FACULTY.FACULTY_NAME = FAC_NAME  
    WHERE STUDENT.FACULTY_NAME = ST_FAC_NAME;  
    COMMIT;  
    END UPDATE_FACULTY_NAME;  
      
    PROCEDURE DELETE_FACULTY( 
        FAC_NAME        FACULTY.FAC_NAME%TYPE   
    ) 
    IS 
    BEGIN 
    DELETE FROM FACULTY 
    WHERE FACULTY.FACULTY_NAME  = FAC_NAME; 
    COMMIT; 
    END DELETE_FACULTY; 
 
 
END FACULTY_PACKAGE;  
/
